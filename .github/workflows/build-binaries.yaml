name: Build paxexpress binaries
on:
  push:
    #  tags:
    #    - 'v*'
jobs:
  mac-os-release:
    name: Build MacOs binary
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Install pyoxidizer
        shell: bash
        run: |
          pip3 install pyoxidizer

      - name: Build binary for macos
        shell: bash
        run: pyoxidizer build --release

      - name: packing
        shell: bash
        run: |
          cd ./build/x86_64-apple-darwin/release
          curl -Lo warp-packer https://github.com/dgiagio/warp/releases/download/v0.3.0/macos-x64.warp-packer
          chmod +x warp-packer
          ./warp-packer --arch macos-x64 --input_dir install --exec paxexpress --output paxexpress

      - name: Upload Binary
        uses: actions/upload-artifact@v2
        with:
          name: mac binary
          path: ./build/x86_64-apple-darwin/release/paxexpress

  windows-release:
    name: Build Windows binary
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1

      - name: Install pyoxidizer
        shell: bash
        run: |
          pip3 install pyoxidizer

      - name: Build binary for windows
        shell: bash
        run: pyoxidizer build --release

      - name: packing
        shell: powershell
        run: |
          cd .\build\x86_64-pc-windows-msvc\release\install
          ls
          cd ..
          ls
          [Net.ServicePointManager]::SecurityProtocol = "tls12, tls11, tls" ; Invoke-WebRequest https://github.com/dgiagio/warp/releases/download/v0.3.0/windows-x64.warp-packer.exe -OutFile warp-packer.exe
          echo $GITHUB_REF
          .\warp-packer.exe --arch windows-x64 --input_dir .\install\ --exec paxexpress.exe --output paxexpress.exe
      - name: Upload Binary
        uses: actions/upload-artifact@v2
        with:
          name: windows binary
          path: .\build\x86_64-pc-windows-msvc\release\paxexpress.exe
          

  # linux-release:
  #   name: Build Linux binary
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v1

  #     - name: Get the version
  #       id: get_version
  #       run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
  #     - name: Install pyoxidizer
  #       shell: bash
  #       run: |
  #         pip3 install pyoxidizer
  #         pip3 install -U subprocess32

  #     - name: Build binary for windows
  #       shell: bash
  #       run: pyoxidizer build --release

  #     - name: packing
  #       shell: bash
  #       run: |
  #         cd ./build/x86_64-unknown-linux-gnu/release/
  #         curl -Lo warp-packer https://github.com/dgiagio/warp/releases/download/v0.3.0/linux-x64.warp-packer
  #         chmod +x warp-packer
  #         ./warp-packer --arch linux-x64 --input_dir install --exec paxexpress --output paxexpress-cli-linux-${{ steps.get_version.outputs.VERSION }}
